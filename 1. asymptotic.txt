f(n) = O(g(n)) -(<=)- f(n) растет не быстрее чем g(n)
    -- f ограничена сверху g (с точнотью до постоянного множителя)
    E c2 > 0 ==> 0 <= f <= c2*g


f(n) = o(g(n)) -(<)- g доминирует над f
    V c2 > 0 ==> 0 <= f < c2*g


f(n) = OmegaBig(g(n)) -(>=)- f ограничена снизу g (с точностью до постоянного множителя)
    E c1 > 0 ==> 0 <= c1*g <= f
    n*log n = OmegaBig(n)


f(n) = OmegaSmall(g(n)) -(>)- f доминирует над g
    V c1 > 0 ==> 0 <= c1*g < f


f(n) = Teta(g(n)) -(=)- f ограничена снизу и сверху g (с точностью до постоянного множителя)
    Е с1 > 0, c2 > 0 ==> 0 <= c1*g <= f <= c2*g
    2n = Teta(n)



        Основная теорема о реккурентных соотношениях

T(n) <= a*T(n/b) + c*n^d
    Тогда
       { O(n^d log n), a = b^d
T(n) = { O(n^d), a < b^d
       { O(n^logb(a)), a > b^d
